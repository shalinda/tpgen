import { Injectable } from '@angular/core';
import { HttpClient, HttpHeaders } from '@angular/common/http';
import { Client } from './client.service';
import { Observable, of } from 'rxjs';
import { catchError, map, tap } from 'rxjs/operators';

import { ${className} } from '../model/${objectName}';

const httpOptions = {
  headers: new HttpHeaders({ 'Content-Type': 'application/json'})
};

@Injectable({
  providedIn: 'root'
})
export class ${className}Service {

  constructor(private client: Client) { }

    getDummy${className}(): ${className} {
      return {
        _id: '',
#foreach ($col in $cols)
        $col.varName: '',  
#end
//        empType: { _id: '', name: '' }
      };
    }

    add${className} (${objectName}: ${className}): Observable<${className}> {            
      return <Observable<${className}>> this.client.post(`${objectName}s`, ${objectName});
    }

    update${className} (${objectName}: ${className}): Observable<${className}> {            
      return <Observable<${className}>> this.client.put(`${objectName}s`, ${objectName});     
    }

    delete${className}(${objectName}: ${className}) {
      return <Observable<${className}>> this.client.delete(`${objectName}s/${${objectName}._id}`);     
    }

     /** GET hero by id. Will 404 if id not found */
    get${className}(name: String): Observable<${className}> {
      return <Observable<${className}>> this.client.get(`${objectName}s/${name}`);
    }

    get${className}s(pageNum: number, limit: number): Observable<{${objectName}s: any[], count: number, page: number, pages: number }> {      
      const url = (pageNum) ? `${objectName}s?page=${pageNum}` : `${objectName}s`;
      return <Observable < { ${objectName}s: any[], count: number, page: number, pages: number }>>this.client.get(url);      
    }
    
}
